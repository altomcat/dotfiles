# Bash initialization for interactive non-login shells and
# for remote shells (info "(bash) Bash Startup Files").

# Export 'SHELL' to child processes.  Programs such as 'screen'
# honor it and otherwise use /bin/sh.
export SHELL

if [[ $- != *i* ]]
then
    # We are being invoked from a non-interactive shell.  If this
    # is an SSH session (as in "ssh host command"), source
    # /etc/profile so we get PATH and other essential variables.
    [[ -n "$SSH_CLIENT" ]] && source /etc/profile

    # Don't do anything else.
    return
fi

# Source the system-wide file.
if [ -f "/etc/bashrc" ]; then source /etc/bashrc; fi

alias ls='ls -p --color=auto'
alias ll='ls -l'
alias grep='grep --color=auto'
alias vi=vim
alias update-system='sudo guix system -L ~/.dotfiles reconfigure ~/dotfiles/guix-config/systems/$(hostname).scm'
alias update-home='guix home -L ~/.dotfiles reconfigure ~/.dotfiles/guix-config/home/home-config.scm'
alias gohaunt='cd ~/projects/altomcat.github.io && guix shell haunt -- haunt serve --watch'

export SSL_CERT_DIR="$HOME/.guix-profile/etc/ssl/certs"
export SSL_CERT_FILE="$HOME/.guix-profile/etc/ssl/certs/ca-certificates.crt"
# just a quick reminder if guix import pypi ... failed
# export SSL_CERT_DIR=/etc/ssl/certs

export GIT_SSL_CAINFO="$SSL_CERT_FILE"
export XDG_RUNTIME_DIR=/mnt/wslg/runtime-dir
export LIBGL_ALWAYS_INDIRECT=0
export QT_QPA_PLATFORM=wayland
export DISPLAY=:0
export WAYLAND_DISPLAY=wayland-0

# Adjust the prompt depending on whether we're in 'guix environment'.
if [ -n "$GUIX_ENVIRONMENT" ]
then
    PS1='\u@\h \w [env]\$ '
    return
else
    PS1='\u@\h \w\$ '
fi

$(command -v direnv > /dev/null) && eval "$(direnv hook bash)"
$(command -v fastfetch > /dev/null) && fastfetch
